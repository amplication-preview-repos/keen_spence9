/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Official as PrismaOfficial } from "@prisma/client";

export class OfficialServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.OfficialCountArgs, "select">): Promise<number> {
    return this.prisma.official.count(args);
  }

  async officials(
    args: Prisma.OfficialFindManyArgs
  ): Promise<PrismaOfficial[]> {
    return this.prisma.official.findMany(args);
  }
  async official(
    args: Prisma.OfficialFindUniqueArgs
  ): Promise<PrismaOfficial | null> {
    return this.prisma.official.findUnique(args);
  }
  async createOfficial(
    args: Prisma.OfficialCreateArgs
  ): Promise<PrismaOfficial> {
    return this.prisma.official.create(args);
  }
  async updateOfficial(
    args: Prisma.OfficialUpdateArgs
  ): Promise<PrismaOfficial> {
    return this.prisma.official.update(args);
  }
  async deleteOfficial(
    args: Prisma.OfficialDeleteArgs
  ): Promise<PrismaOfficial> {
    return this.prisma.official.delete(args);
  }
}
