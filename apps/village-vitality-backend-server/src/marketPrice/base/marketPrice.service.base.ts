/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MarketPrice as PrismaMarketPrice } from "@prisma/client";

export class MarketPriceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MarketPriceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.marketPrice.count(args);
  }

  async marketPrices(
    args: Prisma.MarketPriceFindManyArgs
  ): Promise<PrismaMarketPrice[]> {
    return this.prisma.marketPrice.findMany(args);
  }
  async marketPrice(
    args: Prisma.MarketPriceFindUniqueArgs
  ): Promise<PrismaMarketPrice | null> {
    return this.prisma.marketPrice.findUnique(args);
  }
  async createMarketPrice(
    args: Prisma.MarketPriceCreateArgs
  ): Promise<PrismaMarketPrice> {
    return this.prisma.marketPrice.create(args);
  }
  async updateMarketPrice(
    args: Prisma.MarketPriceUpdateArgs
  ): Promise<PrismaMarketPrice> {
    return this.prisma.marketPrice.update(args);
  }
  async deleteMarketPrice(
    args: Prisma.MarketPriceDeleteArgs
  ): Promise<PrismaMarketPrice> {
    return this.prisma.marketPrice.delete(args);
  }
}
