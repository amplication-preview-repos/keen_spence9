/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EmergencyAlert as PrismaEmergencyAlert,
  User as PrismaUser,
} from "@prisma/client";

export class EmergencyAlertServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmergencyAlertCountArgs, "select">
  ): Promise<number> {
    return this.prisma.emergencyAlert.count(args);
  }

  async emergencyAlerts(
    args: Prisma.EmergencyAlertFindManyArgs
  ): Promise<PrismaEmergencyAlert[]> {
    return this.prisma.emergencyAlert.findMany(args);
  }
  async emergencyAlert(
    args: Prisma.EmergencyAlertFindUniqueArgs
  ): Promise<PrismaEmergencyAlert | null> {
    return this.prisma.emergencyAlert.findUnique(args);
  }
  async createEmergencyAlert(
    args: Prisma.EmergencyAlertCreateArgs
  ): Promise<PrismaEmergencyAlert> {
    return this.prisma.emergencyAlert.create(args);
  }
  async updateEmergencyAlert(
    args: Prisma.EmergencyAlertUpdateArgs
  ): Promise<PrismaEmergencyAlert> {
    return this.prisma.emergencyAlert.update(args);
  }
  async deleteEmergencyAlert(
    args: Prisma.EmergencyAlertDeleteArgs
  ): Promise<PrismaEmergencyAlert> {
    return this.prisma.emergencyAlert.delete(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.emergencyAlert
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
